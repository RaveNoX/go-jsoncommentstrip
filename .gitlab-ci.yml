variables:    
    GOPROJ: "github.com/RaveNoX/go-jsoncommentstrip"

stages:
- test
- build

before_script:
- mkdir -p $GOPATH/src/$GOPROJ
- rmdir $GOPATH/src/$GOPROJ
- ln -s $(pwd) $GOPATH/src/$GOPROJ
#- cd $GOPATH/src/$GOPROJ/
#- go get -u github.com/golang/dep/cmd/dep
#- dep ensure -v

cache:
    key: "${CI_COMMIT_REF_SLUG}"
    paths:
    - vendor/**

format:
    tags:
    - docker
    - linux
    image: golang:latest
    stage: test
    script:
    - go get -u golang.org/x/tools/cmd/goimports
    # If formatted is different than committed, exit with error    
    - (if [ "$(goimports -l ./)" == "" ]; then echo "Good format"; else echo "Bad format"; exit 33; fi);

test:
    tags:
    - docker
    - linux
    image: golang:latest
    stage: test
    script:
    - go test -cover -v ./...

build:
    stage: build
    tags:
    - docker
    - linux
    image: golang:latest
    script:
    - mkdir -p artifacts        
    - echo "Building for Linux"
    - GOOS=linux GOARCH=amd64 go build -o artifacts/jsoncommentstrip ./cmd/jsoncommentstrip
    - echo "Building for MacOS (darwin)"
    - GOOS=darwin GOARCH=amd64 go build -o artifacts/jsoncommentstrip_darwin ./cmd/jsoncommentstrip
    - echo "Building for Windows"
    - GOOS=windows GOARCH=amd64 go build -o artifacts/jsoncommentstrip.exe ./cmd/jsoncommentstrip
    artifacts:
        paths:
        - artifacts/*
